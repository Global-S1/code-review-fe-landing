<style>
  .stars-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -30;
    pointer-events: none;
    background: var(--color-dark);
  }
</style>

<canvas id="starsCanvas" class="stars-canvas"></canvas>

<script is:inline>
  const canvas = document.getElementById("starsCanvas");
  const ctx = canvas.getContext("2d");

  let stars = [];
  let width, height;

  function resize() {
    width = canvas.width = window.innerWidth;
    height = canvas.height = window.innerHeight;
    stars = Array.from({ length: 100 }, () => ({
      x: Math.random() * width,
      y: Math.random() * height,
      radius: Math.random() * 1.5 + 0.5,
      alpha: Math.random(),
      delta: Math.random() * 0.015 + 0.005,
      direction: Math.random() < 0.5 ? 1 : -1,
      minAlpha: Math.random() * 0.3 + 0.2,
      maxAlpha: Math.random() * 0.4 + 0.6,
      isGrowing: Math.random() < 0.3, // 30% tienen animación de tamaño
      growthDirection: Math.random() < 0.5 ? 1 : -1,
      growthSpeed: Math.random() * 0.02 + 0.005,
      isStar: Math.random() < 0.3, // 30% tendrán forma de estrella
      angle: Math.random() * Math.PI * 2,
    }));
  }

  function drawStar(ctx, x, y, size, color) {
    ctx.beginPath();
    ctx.moveTo(x, y - size); // punta arriba
    ctx.lineTo(x + size * 0.5, y); // derecha
    ctx.lineTo(x, y + size); // abajo
    ctx.lineTo(x - size * 0.5, y); // izquierda
    ctx.closePath();
    ctx.fillStyle = color;
    ctx.fill();
  }

  function draw() {
    ctx.clearRect(0, 0, width, height);
    for (let star of stars) {
      // Opacidad
      star.alpha += star.delta * star.direction;
      if (star.alpha <= star.minAlpha || star.alpha >= star.maxAlpha) {
        star.direction *= -1;
      }

      // Crecimiento
      if (star.isGrowing) {
        star.radius += star.growthSpeed * star.growthDirection;
        if (star.radius > 2.5 || star.radius < 0.5) {
          star.growthDirection *= -1;
        }
      }

      ctx.save(); // guardar estado del canvas
      ctx.translate(star.x, star.y);
      ctx.globalAlpha = star.alpha;

      if (star.isStar) {
        ctx.rotate(star.angle);
        drawStar(ctx, 0, 0, star.radius, "white");
      } else {
        ctx.beginPath();
        ctx.arc(0, 0, star.radius, 0, Math.PI * 2);
        ctx.fillStyle = "white";
        ctx.fill();
      }

      ctx.restore(); // restaurar para la siguiente estrella
    }

    ctx.globalAlpha = 1;
    requestAnimationFrame(draw);
  }

  resize();
  draw();
  window.addEventListener("resize", resize);
</script>
